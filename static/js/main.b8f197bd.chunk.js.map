{"version":3,"sources":["serviceWorker.js","reducers/ItemPageReducer.js","reducers/index.js","contants.js","components/Items.js","containers/ItemPageContainer.js","actions/ItemPageActions.js","pages/ItemPage.js","pages/HomePage.js","routes.js","App.js","fetchAPI/addItems.js","fetchAPI/deleteItems.js","fetchAPI/updateItems.js","fetchAPI/searchItems.js","sagas/getItemSaga.js","fetchAPI/getItems.js","sagas/index.js","index.js"],"names":["Boolean","window","location","hostname","match","DEFAULT_STATE","listItem","dataFetched","isFetching","error","errorMessage","textSearch","combineReducers","items","state","action","type","payload","listData","Items","inputAdd","objUpdate","id","name","this","props","map","item","key","onClick","deleteDispatch","dataDelete","e","setState","value","onChange","target","searchDispatch","event","addDispatch","updateDispatch","dataUpdate","Component","ItemPageContainer","initLoad","connect","console","log","dispatch","data","ItemPage","HomePage","href","React","Routes","exact","path","component","page","App","className","callAPI","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","json","res","catch","url","getListItem","addItemActions","deleteItemActions","updateItemActions","searchItemActions","put","message","addItems","deleteItems","updateItems","searchItems","listDataSearch","getItemSaga","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","logger","run","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8f197bd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from \"../contants\"\n\nconst DEFAULT_STATE = {\n    listItem: [],\n    dataFetched: false,\n    isFetching: false,\n    error: false,\n    errorMessage: null,\n    textSearch: \"\"\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case types.GET_ITEM_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.GET_ITEM_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                dataFetched: true,\n                error: false,\n                errorMessage: null,\n                listItem: action.payload\n            }\n        case types.GET_ITEM_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: false,\n                errorMessage: action.payload.errorMessage\n            }\n        case types.ADD_ITEM_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.ADD_ITEM_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                dataFetched: true,\n                error: false,\n                errorMessage: null\n            }\n        case types.ADD_ITEM_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: true,\n                errorMessage: action.payload.errorMessage\n            }\n        case types.DELETE_ITEM_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.DELETE_ITEM_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                dataFetched: true,\n                error: false,\n                errorMessage: null\n            }\n        case types.DELETE_ITEM_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: true,\n                errorMessage: action.payload.errorMessage\n            }\n        case types.UPDATE_ITEM_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.UPDATE_ITEM_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                dataFetched: true,\n                error: false,\n                errorMessage: null\n            }\n        case types.UPDATE_ITEM_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: true,\n                errorMessage: action.payload.errorMessage\n            }\n        case types.SEARCH_ITEM_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.SEARCH_ITEM_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                dataFetched: true,\n                error: false,\n                errorMessage: null,\n                listItem: action.payload.listData,\n                textSearch: action.payload.textSearch\n            }\n        case types.SEARCH_ITEM_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: true,\n                errorMessage: action.payload.errorMessage\n            }\n        default: return state;\n    }\n} ","import { combineReducers } from \"redux\"\nimport ItemPageReducer from \"./ItemPageReducer\"\nexport default combineReducers({\n\titems: ItemPageReducer\n})\n","export const GET_ITEM_REQUEST = \"GET_ITEM_REQUEST\"\nexport const GET_ITEM_SUCCESS = \"GET_ITEM_SUCCESS\"\nexport const GET_ITEM_FAILURE = \"GET_ITEM_FAILURE\"\n\nexport const ADD_ITEM_REQUEST = \"ADD_ITEM_REQUEST\"\nexport const ADD_ITEM_SUCCESS = \"ADD_ITEM_SUCCESS\"\nexport const ADD_ITEM_FAILURE = \"ADD_ITEM_FAILURE\"\n\nexport const DELETE_ITEM_REQUEST = \"DELETE_ITEM_REQUEST\"\nexport const DELETE_ITEM_SUCCESS = \"DELETE_ITEM_SUCCESS\"\nexport const DELETE_ITEM_FAILURE = \"DELETE_ITEM_FAILURE\" \n\nexport const UPDATE_ITEM_REQUEST = \"UPDATE_ITEM_REQUEST\"\nexport const UPDATE_ITEM_SUCCESS = \"UPDATE_ITEM_SUCCESS\"\nexport const UPDATE_ITEM_FAILURE = \"UPDATE_ITEM_FAILURE\"\n\nexport const SEARCH_ITEM_REQUEST = \"SEARCH_ITEM_REQUEST\"\nexport const SEARCH_ITEM_SUCCESS = \"SEARCH_ITEM_SUCCESS\"\nexport const SEARCH_ITEM_FAILURE = \"SEARCH_ITEM_FAILURE\" ","import React, { Component } from \"react\";\nclass Items extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinputAdd: \"\",\n\t\t\tobjUpdate: {\n\t\t\t\tid: 0,\n\t\t\t\tname: \"\"\n\t\t\t},\n\t\t\ttextSearch: \"\"\n\t\t}\n\t}\n\n\n\trender() {\n\t\tlet listData = []\n\t\tif (this.props.items) {\n\t\t\tlistData = this.props.items.map((item, key) => {\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t<th>{item.id}</th>\n\t\t\t\t\t\t<th>{item.name}</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<button onClick={\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\tthis.props.deleteDispatch({dataDelete: item.id, textSearch: this.props.textSearch})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}> Delete </button>\n\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<button onClick={(e) => { this.setState({ objUpdate: item }) }}> Select </button>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<input value={this.state.textSearch} onChange={\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\ttextSearch: e.target.value\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t} />\n\n\t\t\t\t\t<button onClick={\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.props.searchDispatch(this.state.textSearch)\n\t\t\t\t\t\t}\n\t\t\t\t\t}>  Search </button>\n\t\t\t\t</div>\n\n\t\t\t\t<input onChange={\n\t\t\t\t\t(event) => { this.setState({ inputAdd: event.target.value }) }\n\t\t\t\t} />\n\n\t\t\t\t<button onClick={\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.props.addDispatch(this.state.inputAdd)\n\t\t\t\t\t}\n\t\t\t\t}> Add </button>\n\n\t\t\t\t<div>\n\t\t\t\t\t<input value={this.state.objUpdate.name} onChange={\n\t\t\t\t\t\t(event) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tobjUpdate: {\n\t\t\t\t\t\t\t\t\t...this.state.objUpdate,\n\t\t\t\t\t\t\t\t\tname: event.target.value\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t} />\n\n\t\t\t\t\t<button onClick={\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.props.updateDispatch({dataUpdate: this.state.objUpdate, textSearch: this.props.textSearch})\n\t\t\t\t\t\t}\n\t\t\t\t\t}>  Edit </button>\n\t\t\t\t</div>\n\n\t\t\t\t<table>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{listData}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Items;\n","import React, { Component } from \"react\"\nimport Items from \"../components/Items\"\nimport { connect } from \"react-redux\"\nimport * as actions from \"../actions/ItemPageActions\"\n\nclass ItemPageContainer extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.initLoad()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Items {...this.props} />\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\tconsole.log(\"listItem\", state.items.listItem)\n\treturn {\n\t\titems: state.items.listItem,\n\t\ttextSearch: state.items.textSearch\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tinitLoad: () => {\n\t\t\tdispatch(actions.getListItem())\n\t\t},\n\t\taddDispatch: (data) => {\n\t\t\tconsole.log(\"day la add dispatch tai container: \", data)\n\t\t\tdispatch(actions.addItemActions(data))\n\t\t},\n\t\tdeleteDispatch: (data) => {\n\t\t\tconsole.log(\"xoa du lieu: \", data)\n\t\t\tdispatch(actions.deleteItemAction(data))\n\t\t},\n\t\tupdateDispatch: (data) => {\n\t\t\tconsole.log(\"update du lieu: \", data)\n\t\t\tdispatch(actions.updateItemAction(data))\n\t\t},\n\t\tsearchDispatch: (data) => {\n\t\t\tconsole.log(\"search du lieu: \", data)\n\t\t\tdispatch(actions.searchItemAction(data))\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemPageContainer)\n","import * as types from \"../contants\"\n\nexport function getListItem(payload) {\n\treturn {\n\t\ttype: types.GET_ITEM_REQUEST,\n\t\tpayload\n\t}\n}\n\nexport function addItemActions(payload) {\n\treturn {\n\t\ttype: types.ADD_ITEM_REQUEST,\n\t\tpayload\n\t}\n}\n\nexport function deleteItemAction(payload) {\n\treturn {\n\t\ttype: types.DELETE_ITEM_REQUEST,\n\t\tpayload\n\t}\n}\n\nexport function updateItemAction(payload) {\n\treturn {\n\t\ttype: types.UPDATE_ITEM_REQUEST,\n\t\tpayload\n\t}\n}\n\nexport function searchItemAction(payload) {\n\treturn {\n\t\ttype: types.SEARCH_ITEM_REQUEST,\n\t\tpayload\n\t}\n} ","import React, { Component } from \"react\";\nimport ItemContainer from \"../containers/ItemPageContainer\"\n\nclass ItemPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Items Page</h1>\n\t\t\t\t<ItemContainer />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ItemPage;\n","import React from \"react\"\n\nclass HomePage extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Home Page</h1>\n\t\t\t\t<a href=\"/items\"> Go to Items</a>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HomePage;\n","import React from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport * as page from \"./pages\"\n\nconst Routes = () => (\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={page.HomePage} />\n\t\t\t<Route path=\"/items\" component={page.ItemPage} />\n\t\t</Switch>\n\t</BrowserRouter>\n)\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport Routes from \"./routes\"\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Routes />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","export default function callAPI(data){\n\n\treturn new Promise ((resolve, reject) => {\n\t\tconst url = \"http://localhost:3001/items\"\n\t\tfetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\"Content-Type\": \"Application/json\"},\n\t\t\tbody: JSON.stringify({name: data})\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.then((res) => {\n\t\t\tconsole.log('resss', res)\n\t\t\tresolve(res);\n\t\t})\n\t\t.catch((error) => {\n\t\t\treject(error);\n\t\t});\n\t});\n}\n","export default function callAPI(id){\n\n\treturn new Promise ((resolve, reject) => {\n\t\tconst url = `http://localhost:3001/items/${id}`\n\t\tfetch(url, {\n\t\t\tmethod: \"DELETE\"\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.then((res) => {\n\t\t\tconsole.log('resss', res)\n\t\t\tresolve(res);\n\t\t})\n\t\t.catch((error) => {\n\t\t\treject(error);\n\t\t});\n\t});\n}\n","export default function callAPI(data){\n\n\treturn new Promise ((resolve, reject) => {\n\t\tconst url = `http://localhost:3001/items/${data.id}`\n\t\tfetch(url, {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\"Content-Type\": \"Application/json\"},\n\t\t\tbody: JSON.stringify({name: data.name})\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.then((res) => {\n\t\t\tconsole.log('resss', res)\n\t\t\tresolve(res);\n\t\t})\n\t\t.catch((error) => {\n\t\t\treject(error);\n\t\t});\n\t});\n}\n","export default function callAPI(data){\n\n\treturn new Promise ((resolve, reject) => {\n\t\tconst url = `http://localhost:3001/items?q=${data}`\n\t\tfetch(url, {\n\t\t\tmethod: \"GET\"\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.then((res) => {\n\t\t\tconsole.log('resss', res)\n\t\t\tresolve(res);\n\t\t})\n\t\t.catch((error) => {\n\t\t\treject(error);\n\t\t});\n\t});\n}","import { put, takeEvery } from \"redux-saga/effects\"\nimport getItems from \"../fetchAPI/getItems\"\nimport addItems from \"../fetchAPI/addItems\"\nimport deleteItems from \"../fetchAPI/deleteItems\"\nimport updateItems from \"../fetchAPI/updateItems\"\nimport searchItems from \"../fetchAPI/searchItems\"\nimport * as types from \"../contants\"\n\nfunction* getListItem(action) {\n\ttry {\n\t\tconst res = yield getItems();\n\t\tyield put({\n\t\t\ttype: types.GET_ITEM_SUCCESS,\n\t\t\tpayload: res\n\t\t})\n\t} catch (error) {\n\t\t\tyield put({\n\t\t\t\ttype: types.GET_ITEM_FAILURE,\n\t\t\t\tpayload: {\n\t\t\t\t\terrorMessage: error.message\n\t\t\t\t}\n\t\t\t})\n\t}\n}\n\nfunction* addItemActions(action) {\n\ttry { \n\t\tyield addItems(action.payload);\n\t\tyield put({\n\t\t\ttype: types.ADD_ITEM_SUCCESS\n\t\t})\n\t\tyield put({\n\t\t\ttype: types.GET_ITEM_REQUEST\n\t\t})\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: types.ADD_ITEM_FAILURE,\n\t\t\tpayload: {\n\t\t\t\terrorMessage: error.message\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction* deleteItemActions(action) {\n\ttry {\n\t\tyield deleteItems(action.payload.dataDelete);\n\t\tyield put ({\n\t\t\ttype: types.DELETE_ITEM_SUCCESS\n\t\t})\n\t\tif(action.payload.textSearch !== \"\"){\n\t\t\tyield put ({\n\t\t\t\ttype: types.SEARCH_ITEM_REQUEST,\n\t\t\t\tpayload: action.payload.textSearch\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tyield put ({\n\t\t\t\ttype: types.GET_ITEM_REQUEST\n\t\t\t})\n\t\t}\n\t} catch (error) {\n\t\tyield put ({\n\t\t\ttype: types.DELETE_ITEM_FAILURE,\n\t\t\tpayload: {\n\t\t\t\terrorMessage: error.message\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction* updateItemActions(action) {\n\ttry {\n\t\tyield updateItems(action.payload.dataUpdate);\n\t\tconsole.log(action.payload);\n\t\tyield put ({\n\t\t\ttype: types.UPDATE_ITEM_SUCCESS\n\t\t})\n\t\tif(action.payload.textSearch !== \"\"){\n\t\t\tyield put ({\n\t\t\t\ttype: types.SEARCH_ITEM_REQUEST,\n\t\t\t\tpayload: action.payload.textSearch\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tyield put ({\n\t\t\t\ttype: types.GET_ITEM_REQUEST\n\t\t\t})\n\t\t}\n\t} catch (error) {\n\t\tyield put ({\n\t\t\ttype: types.UPDATE_ITEM_FAILURE,\n\t\t\tpayload: {\n\t\t\t\terrorMessage: error.message\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction* searchItemActions(action) {\n\ttry {\n\t\tconst listDataSearch = yield searchItems(action.payload);\n\t\tconsole.log(action.payload);\n\t\tyield put ({\n\t\t\ttype: types.SEARCH_ITEM_SUCCESS,\n\t\t\tpayload: { listData: listDataSearch, textSearch: action.payload}\n\t\t})\n\t} catch (error) {\n\t\tyield put ({\n\t\t\ttype: types.SEARCH_ITEM_FAILURE,\n\t\t\tpayload: {\n\t\t\t\terrorMessage: error.message\n\t\t\t}\n\t\t})\n\t}\n}\n\n\nexport const getItemSaga = [\n    takeEvery(types.GET_ITEM_REQUEST, getListItem),\n\ttakeEvery(types.ADD_ITEM_REQUEST, addItemActions),\n\ttakeEvery(types.DELETE_ITEM_REQUEST, deleteItemActions),\n\ttakeEvery(types.UPDATE_ITEM_REQUEST, updateItemActions),\n\ttakeEvery(types.SEARCH_ITEM_REQUEST, searchItemActions)\n] \n","export default function callAPI() {\n\treturn new Promise((resolve, reject) => {\n\n\t\tconst url = \"http://localhost:3001/items\"\n\t\tfetch(url, {\n\t\t\tmethod: \"GET\"\n\t\t})\n\t\t\t//.then((response) => response.json())\n\t\t\t.then((response) => response.json())\n\t\t\t.then((res) => {\n\t\t\t\t//console.log(res)\n\t\t\t\tresolve(res);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\treject(error);\n\t\t\t});\n\t});\n}\n","import { all } from \"redux-saga/effects\"\nimport { getItemSaga } from \"./getItemSaga\"\nfunction* rootSaga() {\n\tyield all([\n\t\t...getItemSaga\n\t]);\n}\nexport default rootSaga;\n","import React from 'react'\nimport * as serviceWorker from './serviceWorker';\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport App from './App'\nimport logger from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger))\nsagaMiddleware.run(rootSaga)\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>\n\t,\n\tdocument.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}